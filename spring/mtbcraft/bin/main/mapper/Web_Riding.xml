<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mtbcraft.mapper.RidingMapper">
	
	<!-- 로그인 후 페이지 구성을 위한 최신 라이딩 기록 조회 -->
	<select id="getRidingRecordTop3" parameterType="String" resultType="com.mtbcraft.dto.RidingRecord">
		<![CDATA[ SELECT * FROM (SELECT * FROM RIDING_RECORD WHERE RR_RIDER = #{rr_rider} ORDER BY RR_DATE DESC) WHERE ROWNUM <= 3 ]]>
	</select>
	
	<!-- 사용자 주행기록 조회 -->
	<select id="getRidingRecord" parameterType="String" resultType="com.mtbcraft.dto.RidingRecord">
		select * from riding_record where rr_rider = #{rr_rider} order by rr_num desc
	</select>
	
	<!-- 라이딩 넘버로 GPX파일명 조회 -->
	<select id="getGpxFileByRR_Num" parameterType="Integer" resultType="String">
		SELECT RR_GPX FROM RIDING_RECORD WHERE RR_NUM=#{rr_num}
	</select>
	
	<!-- 라이딩 넘버로 라이딩기록 조회 -->
	<select id="getRidingRecordDetail" parameterType="Integer" resultType="com.mtbcraft.dto.RidingRecord">
		SELECT * FROM RIDING_RECORD WHERE RR_NUM = #{rr_num}
	</select>
	
	<!-- 라이딩 기록 공개/비공개 전환 -->
	<update id="updateRidingRecord">
		UPDATE RIDING_RECORD SET RR_OPEN=#{rr_open} WHERE RR_NUM=#{rr_num}
	</update>
	
	<!-- 라이딩 기록 이름 변경 -->
	<update id="updateRidingRecordName">
		UPDATE RIDING_RECORD SET RR_NAME=#{rr_name} WHERE RR_NUM=#{rr_num}
	</update>
	
	<!-- 등록된 위험지역 조회 -->
	<select id="getDangerousArea" resultType="com.mtbcraft.dto.DangerousArea">
		SELECT * FROM DANGEROUS_AREA
	</select>
	
	<!-- 사용자 등록 위험지역 조회 -->
	<select id="getUserDangerousArea" parameterType="String"
		resultType="com.mtbcraft.dto.DangerousArea">
		select * from DANGEROUS_AREA where DA_RIDER = #{rr_rider}
	</select>
	
	<!-- 위험지역신청 등록 -->
	<insert id="postDangerousArea"
		parameterType="com.mtbcraft.dto.DangerousArea">
		insert into dangerous_area(da_num, da_rider,
		da_latitude, da_addr, da_status, da_content, da_longitude, da_image)
		values(SEQ_DANGEROUSAREA.nextval, #{da_rider}, #{da_latitude},
		#{da_addr}, 0, #{da_content}, #{da_longitude}, #{da_image})
	</insert>
	
	<!-- 사용자 스크랩 코스 조회 -->
	<select id="getScrapCourse" parameterType="String"
		resultType="com.mtbcraft.dto.RidingRecord">
		select * from riding_record a where exists (select ss_rnum from scrap_status where ss_rider=#{rr_rider} and ss_rnum =a.rr_num)
	</select>
	
	<!-- 현재는 코스가 아닌 주행기록을 조회하기에 협의 후 최종결정 --> 
	<!-- 등록된 코스 조회 -->
	<select id="getCourses" resultType="com.mtbcraft.dto.RidingRecord">
		SELECT * FROM RIDING_RECORD WHERE RR_OPEN=1
	</select>
	
	<!-- 사용자 스크랩 코스 추가 -->
	<insert id="postScrapCourse">
		INSERT INTO SCRAP_STATUS VALUES(#{ss_rider}, #{ss_rnum})
	</insert>
	
	<!-- 사용자 스크랩 코스 삭제 -->
	<delete id="deleteScrapCourse">
		DELETE FROM SCRAP_STATUS WHERE SS_RIDER=#{ss_rider} AND SS_RNUM=#{ss_rnum}
	</delete>
	
	<!-- 라이딩 넘버로 리뷰 조회 -->
	<select id="getCourseReviews" parameterType="Integer" resultType="com.mtbcraft.dto.Course_Review">
		SELECT RIDER.R_IMAGE as RIDERIMG, cr_num, cr_rider, cr_time, cr_content, CR_IMAGES FROM RIDER, COURSE_RIVIEW WHERE RIDER.R_ID=COURSE_RIVIEW.CR_RIDER AND COURSE_RIVIEW.CR_RNUM=#{cr_rnum}
	</select>
	
	<!-- 리뷰 등록 -->
	<insert id="postCourseReview" parameterType="com.mtbcraft.dto.Course_Review">
		INSERT INTO COURSE_RIVIEW(CR_NUM, CR_RIDER, CR_CONTENT, CR_RNUM, CR_IMAGES, CR_TIME) VALUES (SEQ_COURSEREVIEW.NEXTVAL, #{cr_rider}, #{cr_content}, #{cr_rnum}, #{cr_images, jdbcType=VARCHAR}, #{cr_time})
	</insert>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteCourseReview" parameterType="int">
		DELETE FROM COURSE_RIVIEW WHERE CR_NUM=#{cr_num}
	</delete>
	
	<!-- 리뷰 수정 -->
	<update id="updateCourseReview">
		UPDATE COURSE_RIVIEW SET CR_CONTENT=#{cr_content}, CR_TIME=SYSTIMESTAMP+9/24 WHERE CR_NUM=#{cr_num}
	</update>
	
	<!-- 코스 추천 -->
	<insert id="postLS" parameterType="com.mtbcraft.dto.Like_Status">
		INSERT INTO LIKE_STATUS VALUES (#{ls_rider}, #{ls_rnum})
	</insert>
	
	<!-- 코스 추천수 조회 -->
	<select id="getRR_Like" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM LIKE_STATUS WHERE LS_RNUM=#{ls_rnum}
	</select>
	
	<!-- 코스 추천 취소 -->
	<delete id="deleteLS" parameterType="com.mtbcraft.dto.Like_Status">
		DELETE FROM LIKE_STATUS WHERE LS_RNUM=#{ls_rnum} and LS_RIDER=#{ls_rider}
	</delete>
</mapper>

